{"ast":null,"code":"import _slicedToArray from \"/Users/ouhao/ohh/react-hooks-ohh/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ouhao/ohh/react-hooks-ohh/src/hooks/03_useEffect.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function HookUseEffect() {\n  const _useState = useState('inke'),\n        _useState2 = _slicedToArray(_useState, 2),\n        inke = _useState2[0],\n        setInke = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1]; // const [other, setOther] = useState(0)\n\n  /**\n   * useEffect（代替生命周期）\n   * @param {Function} 必选 callback\n   * @param {Array} 可选 \n   * 1.不传：每次组件渲染时都调用\n   * 2.传[]：一开始的时候调用\n   * 3.传[state]: state改变时调用\n   */\n\n\n  useEffect(() => {\n    changeColor();\n  }, [count]);\n\n  const changeColor = () => {\n    setInke(inke + '哈');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, inke), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"change\"));\n}","map":{"version":3,"sources":["/Users/ouhao/ohh/react-hooks-ohh/src/hooks/03_useEffect.js"],"names":["React","useState","useEffect","HookUseEffect","inke","setInke","count","setCount","changeColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,aAAT,GAA0B;AAAA,oBACfF,QAAQ,CAAC,MAAD,CADO;AAAA;AAAA,QAChCG,IADgC;AAAA,QAC1BC,OAD0B;;AAAA,qBAEbJ,QAAQ,CAAC,CAAD,CAFK;AAAA;AAAA,QAEhCK,KAFgC;AAAA,QAEzBC,QAFyB,kBAGvC;;AAEA;;;;;;;;;;AAQAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAACD,IAAI,GAAG,GAAR,CAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function HookUseEffect () {\n  const [inke, setInke] = useState('inke')\n  const [count, setCount] = useState(0)\n  // const [other, setOther] = useState(0)\n\n  /**\n   * useEffect（代替生命周期）\n   * @param {Function} 必选 callback\n   * @param {Array} 可选 \n   * 1.不传：每次组件渲染时都调用\n   * 2.传[]：一开始的时候调用\n   * 3.传[state]: state改变时调用\n   */\n  useEffect(() => {\n    changeColor()\n  }, [count])\n\n  const changeColor = () => {\n    setInke(inke + '哈')\n  }\n\n  return (\n    <div>\n      <p>{inke}</p>\n      <button onClick={() => setCount(count + 1)}>change</button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}