{"ast":null,"code":"var _jsxFileName = \"/Users/ouhao/inke/react-hooks/src/App.js\";\nimport React, { useReducer, useContext } from 'react';\nimport { reducer, initialState } from \"./reducers\";\nimport { RESET, ADD } from './constant'; // export default function Counter () {\n//   /**\n//    * useReducer（代替redux）\n//    * @param {Function} 必选 reducer函数\n//    * @param {any} 初始化的state\n//    */\n//   const [state, dispatch] = useReducer(reducer, initialState)\n//   return (\n//     <div>\n//       <p>{state.count}</p>\n//       <button onClick={() => dispatch({ type: RESET })}>Reset</button>\n//       <button onClick={() => dispatch({ type: ADD })}>+</button>\n//     </div>\n//   )\n// }\n\nconst ThemeContext = React.createContext('light');\nexport default function Index(props) {\n  const theme = useContext(ThemeContext);\n\n  const Toolbar = props => {\n    console.log(ThemeContext);\n    return React.createElement(ThemedButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  };\n\n  const ThemedButton = props => React.createElement(\"button\", {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n\n  return React.createElement(ThemeContext.Provider, {\n    value: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ouhao/inke/react-hooks/src/App.js"],"names":["React","useReducer","useContext","reducer","initialState","RESET","ADD","ThemeContext","createContext","Index","props","theme","Toolbar","console","log","ThemedButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,YAAtC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,YAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,CAAoB,OAApB,CAArB;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAMC,KAAK,GAAGT,UAAU,CAACK,YAAD,CAAxB;;AAEA,QAAMK,OAAO,GAAGF,KAAK,IAAI;AACvBG,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,WAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD;;AAKA,QAAMQ,YAAY,GAAGL,KAAK,IAAI;AAAQ,IAAA,KAAK,EAAEC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B;;AAEA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useReducer, useContext } from 'react'\nimport { reducer, initialState } from \"./reducers\"\nimport { RESET, ADD } from './constant'\n\n// export default function Counter () {\n//   /**\n//    * useReducer（代替redux）\n//    * @param {Function} 必选 reducer函数\n//    * @param {any} 初始化的state\n//    */\n//   const [state, dispatch] = useReducer(reducer, initialState)\n\n//   return (\n//     <div>\n//       <p>{state.count}</p>\n//       <button onClick={() => dispatch({ type: RESET })}>Reset</button>\n//       <button onClick={() => dispatch({ type: ADD })}>+</button>\n//     </div>\n//   )\n// }\n\n\nconst ThemeContext = React.createContext('light')\n\nexport default function Index (props) {\n  const theme = useContext(ThemeContext)\n\n  const Toolbar = props => {\n    console.log(ThemeContext)\n    return <ThemedButton />\n  }\n\n  const ThemedButton = props => <button theme={theme} />\n\n  return (\n    <ThemeContext.Provider value=\"dark\">\n      <Toolbar />\n    </ThemeContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}