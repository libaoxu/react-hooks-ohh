{"ast":null,"code":"import _slicedToArray from \"/Users/ouhao/inke/react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ouhao/inke/react-hooks/src/reducers/index.js\";\nimport React, { useReducer } from \"react\";\nimport { RESET, ADD } from \"../constant\";\nconst initialState = {\n  count: 0\n};\nexport const myContext = React.createContext();\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case RESET:\n      return initialState;\n\n    case ADD:\n      return {\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n}\nexport const ContextProvider = props => {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(myContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/ouhao/inke/react-hooks/src/reducers/index.js"],"names":["React","useReducer","RESET","ADD","initialState","count","myContext","createContext","reducer","state","action","type","ContextProvider","props","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,aAA3B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;AACA,OAAO,MAAMC,SAAS,GAAGN,KAAK,CAACO,aAAN,EAAlB;AAEP,OAAO,SAASC,OAAT,CAAkBC,KAAK,GAAGL,YAA1B,EAAwCM,MAAxC,EAAgD;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAL;AACE,aAAOE,YAAP;;AACF,SAAKD,GAAL;AACE,aAAO;AAAEE,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE,aAAOI,KAAP;AANJ;AAQD;AAED,OAAO,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAAA,sBACZZ,UAAU,CAACO,OAAD,EAAUJ,YAAV,CADE;AAAA;AAAA,QAC/BK,KAD+B;AAAA,QACxBK,QADwB;;AAGtC,SACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASK,MAAAA;AAAT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF;AAKD,CARM","sourcesContent":["import React, { useReducer } from \"react\"\nimport { RESET, ADD } from \"../constant\"\n\nconst initialState = { count: 0 }\nexport const myContext = React.createContext()\n\nexport function reducer (state = initialState, action) {\n  switch (action.type) {\n    case RESET: \n      return initialState\n    case ADD:\n      return { count: state.count + 1 }\n    default: \n      return state\n  }\n}\n\nexport const ContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <myContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </myContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}