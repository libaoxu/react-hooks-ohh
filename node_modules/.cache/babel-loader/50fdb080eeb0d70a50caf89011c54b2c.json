{"ast":null,"code":"var _jsxFileName = \"/Users/ouhao/inke/react-hooks/src/App.js\";\nimport React, { useReducer, useContext } from 'react';\nimport { reducer, initialState } from \"./reducers\";\nimport { RESET, ADD } from './constant'; // export default function Counter () {\n//   /**\n//    * useReducer（代替redux）如果页面state复杂（state是一个对象或者state非常多散落在各处）\n//    * @param {Function} 必选 reducer函数\n//    * @param {any} 初始化的state\n//    */\n//   const [state, dispatch] = useReducer(reducer, initialState)\n//   return (\n//     <div>\n//       <p>{state.count}</p>\n//       <button onClick={() => dispatch({ type: RESET })}>Reset</button>\n//       <button onClick={() => dispatch({ type: ADD })}>+</button>\n//     </div>\n//   )\n// }\n\nimport ChildApp from './childApp';\nexport const ThemeContext = React.createContext();\nexport default function Index(props) {\n  return React.createElement(ThemeContext.Provider, {\n    value: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ChildApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ouhao/inke/react-hooks/src/App.js"],"names":["React","useReducer","useContext","reducer","initialState","RESET","ADD","ChildApp","ThemeContext","createContext","Index","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,YAAtC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,YAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,MAAMC,YAAY,GAAGR,KAAK,CAACS,aAAN,EAArB;AAEP,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAEpC,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useReducer, useContext } from 'react'\nimport { reducer, initialState } from \"./reducers\"\nimport { RESET, ADD } from './constant'\n\n// export default function Counter () {\n//   /**\n//    * useReducer（代替redux）如果页面state复杂（state是一个对象或者state非常多散落在各处）\n//    * @param {Function} 必选 reducer函数\n//    * @param {any} 初始化的state\n//    */\n//   const [state, dispatch] = useReducer(reducer, initialState)\n\n//   return (\n//     <div>\n//       <p>{state.count}</p>\n//       <button onClick={() => dispatch({ type: RESET })}>Reset</button>\n//       <button onClick={() => dispatch({ type: ADD })}>+</button>\n//     </div>\n//   )\n// }\n\nimport ChildApp from './childApp'\nexport const ThemeContext = React.createContext()\n\nexport default function Index (props) {\n\n  return (\n    <ThemeContext.Provider value=\"dark\">\n      <ChildApp />\n    </ThemeContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}