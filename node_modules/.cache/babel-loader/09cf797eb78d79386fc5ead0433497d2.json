{"ast":null,"code":"import _slicedToArray from \"/Users/ouhao/ohh/react-hooks-ohh/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ouhao/ohh/react-hooks-ohh/src/hooks/05_useContext.js\";\nimport React, { useState } from 'react';\nimport HookUseContextChild from './05_useContextChild';\nexport const MyContext = React.createContext();\nconst Provider = MyContext.Provider;\nexport default function HookUseContext(props) {\n  const _useState = useState('inke'),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  return React.createElement(Provider, {\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      setName(name + '哈');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(HookUseContextChild, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ouhao/ohh/react-hooks-ohh/src/hooks/05_useContext.js"],"names":["React","useState","HookUseContextChild","MyContext","createContext","Provider","HookUseContext","props","name","setName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,sBAAhC;AACA,OAAO,MAAMC,SAAS,GAAGH,KAAK,CAACI,aAAN,EAAlB;AAEP,MAAMC,QAAQ,GAAGF,SAAS,CAACE,QAA3B;AAEA,eAAe,SAASC,cAAT,CAAyBC,KAAzB,EAAgC;AAAA,oBAErBN,QAAQ,CAAC,MAAD,CAFa;AAAA;AAAA,QAEtCO,IAFsC;AAAA,QAEhCC,OAFgC;;AAI7C,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,OAAO,CAACD,IAAI,GAAG,GAAR,CAAP;AAAqB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,CAAP;AAID","sourcesContent":["import React, { useState } from 'react'\nimport HookUseContextChild from './05_useContextChild'\nexport const MyContext = React.createContext()\n\nconst Provider = MyContext.Provider\n\nexport default function HookUseContext (props) {\n\n  const [name, setName] = useState('inke')\n\n  return <Provider value={name}>\n    <button onClick={() => { setName(name + '哈') }}></button>\n    <HookUseContextChild />\n  </Provider>\n}\n"]},"metadata":{},"sourceType":"module"}