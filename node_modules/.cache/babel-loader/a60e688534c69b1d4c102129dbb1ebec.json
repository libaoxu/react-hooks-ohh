{"ast":null,"code":"var _jsxFileName = \"/Users/ouhao/ohh/react-hooks-ohh/src/hooks/09_useImperativeHandle.js\";\nimport React, { useRef, useImperativeHandle, forwardRef } from 'react';\n\nfunction FancyInput(props, ref) {\n  const inputRef = useRef();\n  console.log('FancyInput ref: ', ref);\n  /**\n   * useImperativeHandle(ref, createHandle, [deps])\n   */\n\n  useImperativeHandle(ref, params => {\n    console.log('useImperativeHandle params: ', params);\n\n    focus: () => {\n      inputRef.current.focus();\n    }; // return {\n    //   setFocus () {\n    //     inputRef.current.focus()\n    //   }\n    // }\n\n  });\n  return React.createElement(\"input\", {\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n}\n\nexport const ForWardFancyInput = forwardRef(FancyInput);","map":{"version":3,"sources":["/Users/ouhao/ohh/react-hooks-ohh/src/hooks/09_useImperativeHandle.js"],"names":["React","useRef","useImperativeHandle","forwardRef","FancyInput","props","ref","inputRef","console","log","params","focus","current","ForWardFancyInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,mBAAxB,EAA6CC,UAA7C,QAA+D,OAA/D;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,GAAhC;AAEA;;;;AAGAJ,EAAAA,mBAAmB,CAACI,GAAD,EAAMI,MAAM,IAAI;AACjCF,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CC,MAA5C;;AAEAC,IAAAA,KAAK,EAAE,MAAM;AACXJ,MAAAA,QAAQ,CAACK,OAAT,CAAiBD,KAAjB;AACD,KAFM,CAH0B,CAMjC;AACA;AACA;AACA;AACA;;AACD,GAXkB,CAAnB;AAaA,SAAO;AAAO,IAAA,GAAG,EAAEJ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,OAAO,MAAMM,iBAAiB,GAAGV,UAAU,CAACC,UAAD,CAApC","sourcesContent":["import React, { useRef, useImperativeHandle, forwardRef } from 'react'\n\nfunction FancyInput(props, ref) {\n  const inputRef = useRef()\n  console.log('FancyInput ref: ', ref)\n\n  /**\n   * useImperativeHandle(ref, createHandle, [deps])\n   */\n  useImperativeHandle(ref, params => {\n    console.log('useImperativeHandle params: ', params)\n\n    focus: () => {\n      inputRef.current.focus()\n    }\n    // return {\n    //   setFocus () {\n    //     inputRef.current.focus()\n    //   }\n    // }\n  })\n\n  return <input ref={inputRef} />\n}\n\nexport const ForWardFancyInput = forwardRef(FancyInput)"]},"metadata":{},"sourceType":"module"}