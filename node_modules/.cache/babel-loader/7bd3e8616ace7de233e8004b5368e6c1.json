{"ast":null,"code":"var _jsxFileName = \"/Users/ouhao/inke/react-hooks/src/App.js\";\nimport React, { useContext } from 'react';\nimport { myContext } from \"./reducers\";\nexport default function Counter() {\n  const _useContext = useContext(myContext),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Counter Count: \", state.count, React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"reset\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"increment\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"decrement\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"-\"));\n}","map":{"version":3,"sources":["/Users/ouhao/inke/react-hooks/src/App.js"],"names":["React","useContext","myContext","Counter","state","dispatch","count","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe,SAASC,OAAT,GAAoB;AAAA,sBACLF,UAAU,CAACC,SAAD,CADL;AAAA,QACzBE,KADyB,eACzBA,KADyB;AAAA,QAClBC,QADkB,eAClBA,QADkB;;AAGjC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkBD,KAAK,CAACE,KADxB,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAQD","sourcesContent":["import React, { useContext } from 'react'\nimport { myContext } from \"./reducers\"\n\nexport default function Counter () {\n  const { state, dispatch } = useContext(myContext)\n  \n  return (\n    <div>\n      Counter Count: {state.count}\n      <button onClick={() => dispatch({ type: \"reset\" })}>Reset</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}